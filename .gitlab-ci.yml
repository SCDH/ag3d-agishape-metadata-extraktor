stages:
  - build
  - test
  - push
  - helm-lint-chart
  - helm-build-chart
  - push-helm-chart
  - staging

include:
  - project: 'ULB/it-service/base-images/ci-template'
    ref: 'main'
    file: 'default.yml'
  - project: 'ULB/it-service/base-images/ci-template'
    ref: 'main'
    file: 'variables.yml'
  - project: 'ULB/it-service/base-images/ci-template'
    ref: 'main'
    file: 'build/build-container-without-cache.yml'
  - project: 'ULB/it-service/base-images/ci-template'
    ref: 'main'
    file: 'security/security.yml'
  - project: 'ULB/it-service/base-images/ci-template'
    ref: 'main'
    file: 'security/security-container.yml'
  - project: 'ULB/it-service/base-images/ci-template'
    ref: 'main'
    file: 'push/push-container-gitlab.yml'
  - project: 'ULB/it-service/base-images/ci-template'
    ref: 'main'
    file: 'push/push-signed-container-harbor.yml'
  - project: 'ULB/it-service/base-images/ci-template'
    ref: 'main'
    file: 'pipelines/helm-charts.yml'

variables:
  HELM_CHART_NAME: "metadata-extraktor"
  HELM_BUILD_DIR: "$CI_PROJECT_DIR/build"

.default_rules:
  rules:
    - when: always
    
.default_rules_prod:
  rules:
    - if: $CI_COMMIT_REF_NAME != "prod"
      when: never

test:
  image:
    name: "$CI_DEPENDENCY_PROXY_GROUP_IMAGE_PREFIX/perl:5.36-bullseye"
  script:
    - apt update
    - apt install -y poppler-utils
    - cpanm -nq --installdeps .
    - perl Makefile.PL
    - make test

build-container-without-cache:
  variables:
    CI_DOCKERFILE_PATH: "./"
  rules:
    - !reference [.default_rules, rules]

container_scanning:
  rules:
    - !reference [.default_rules, rules]

push-container-gitlab:
  rules:
    - !reference [.default_rules, rules]

push-container-harbor:
  rules:
    - !reference [.default_rules, rules]

prepare-for-signing:
  rules:
    - !reference [.default_rules, rules]

sign-container-harbor:
  rules:
    - !reference [.default_rules, rules]

dry-run:staging:
  stage: staging
  environment:
    name: staging
  variables:
    KUBE_CONTEXT: SCDH/ag-3d/metadata-extraktor:scdh-universe-stage
  rules:
    - !reference [.default_rules, rules]
  before_script:
    - kubectl config use-context $KUBE_CONTEXT && chmod 0400 $KUBECONFIG
  script:
    - helm upgrade --install metadata-extraktor metadata-extraktor -n=scdh-universe -f installs/stage-scdh-universe.yaml --set image.imageCredentials.username=$HARBOR_USERNAME --set image.imageCredentials.password=$HARBOR_PASSWORD --dry-run  > /dev/null
