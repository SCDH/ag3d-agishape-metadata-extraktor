stages:
  - test
  - build
  - push

variables:
  BUILD_DIR: "$CI_PROJECT_DIR/build"

include:
  - template: Jobs/Secret-Detection.gitlab-ci.yml
  - template: Security/SAST-IaC.latest.gitlab-ci.yml

default:
  image: harbor.uni-muenster.de/ulb-baseimages/kube-ops:latest

.default_rules:
  rules:
    - if: $CI_PIPELINE_SOURCE == "web"

lint-chart-certmanager:
  stage: test
  rules:
    - changes:
        - helm-chart/**/*
    - !reference [ .default_rules, rules ]
  before_script:
    # Log in to the Helm registry
    - echo "$HARBOR_PASSWORD" | helm registry login "${HARBOR_URL}" --username "${HARBOR_USERNAME}" --password-stdin
  script:
    - helm dependency update helm-chart
    - helm lint helm-chart
  after_script:
    - helm registry logout "${HARBOR_URL}"

build-chart-certmanager:
  stage: build
  rules:
    - changes:
        - helm-chart/**/*
    - !reference [ .default_rules, rules ]
  before_script:
    - echo "$HARBOR_PASSWORD" | helm registry login "${HARBOR_URL}" --username "${HARBOR_USERNAME}" --password-stdin
  script:
    - mkdir $BUILD_DIR
    - helm dependency update helm-chart
    - helm package helm-chart -d $BUILD_DIR
  after_script:
    - helm registry logout "${HARBOR_URL}"
  artifacts:
    untracked: true
    expire_in: 10 mins
    paths:
      - $BUILD_DIR

push-chart-certmanager:
  stage: push
  rules:
    - changes:
        - helm-chart/**/*
    - !reference [ .default_rules, rules ]
  before_script:
    - echo "$HARBOR_PASSWORD" | helm registry login "${HARBOR_URL}" --username "${HARBOR_USERNAME}" --password-stdin
    - export CHART_VERSION=$(helm show chart helm-chart/ | grep version | cut -d' ' -f2 | tr -d '\n')
  script:
    - cd $BUILD_DIR
    - helm push "metadata-extraktor-$CHART_VERSION.tgz" ${HARBOR_OCI}/${HARBOR_PROJECT}
  after_script:
    - helm registry logout "${HARBOR_URL}"